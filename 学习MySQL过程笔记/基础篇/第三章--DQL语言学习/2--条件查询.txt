1、条件查询
	语法：SELECT 查询列表 FROM 表名 WHERE 筛选条件；
	（1）按条件表达式筛选
		条件运算符：> < = != <> >= <=
	（2）按逻辑表达式筛选
		逻辑运算符：&& || ! (and or not)
	（3）模糊查询
		like 
		between and
		in
		is NULL
	按条件表达式筛选：
	案例1：查询工资>12000的员工信息
		SELECT * FROM employees WHERE salary>12000;
	案例2：查询部门编号不等于90号的员工名和部门编号
		SELECT first_name,department_id FROM employees WHERE department_id<>90;
	
	按逻辑表达式查询
	案例一：查询工资在10000到20000之间的员工名、工资以及奖金
		SELECT first_name,salary,bonus FROM employees WHERE salary>=10000 && salary<=20000;
	案例二：查询部门编号不是90到110之间，或者工资高于15000的员工信息
		SELECT * FROM employees WHERE !(departmet_id >=90 && department <= 110) || salary>15000;

	模糊查询 
		①like
	案例一：查询员工名中包含字符a的员工信息
		SELECT * FROM employees WHERE last_name LIKE '%a%';
		like的特点：
			---一般和通配符搭配使用---通配符：% 任意多个字符 _任意单个字符
			ESCAPE-----声名转义字符
		②between and
	案例二：查询员工编号在100到120之间的员工信息
		SELECT * FROM employees WHERE employee_id BETWEEN 100 AND 120;
		between and特点：
			---可以提高语句简洁度
			---包含临界值
			---两个临界值不能调换顺序
		③in
	案例：查询员工的工种编号是 IT_PROG、AD_VP、AD_PRES中的员工名和工种编号
		SELECT last_name,job_id FROM employees WHERE job_id IN(IT_PROG,AD_VP,AD_PRES);
	 	in的特点：
			---用于判断某字段的值是否属于in列表中的某一项
			---in列表中的值类型必须统一
			---不能用通配符代替
		④is null
	案例：查询没有奖金的员工名和奖金率
		SELECT last_name,commission_pct FROM employees WHERE commission_pct IS NULL; 
		is null特点：
			--- =、<>不能用于判断null值
			--- is null 和 is not null 可以判断null值；
	安全等于<=>
		SELECT last_name,commission_pct FROM employees WHERE commission_pct <=> NULL;	
	
				
		
	