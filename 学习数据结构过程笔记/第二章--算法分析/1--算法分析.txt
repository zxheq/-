1、算法分析分为两大类：
	（1）算法的时间复杂度分析：
		①事后复杂度分析（弊端大，不推荐）
		②事前分析法：
			1--算法采用的策略和方案（可干预）
			2--编译产生的代码质量（不可干预）
			3--问题的输入规模（可干预） ps：所谓的问题输入规模就是输入量的多少）
			4--机器执行的指令速度（不可干预）
		执行次数 = 执行时间
		总结：最重要的就是把核心操作的次数和输入规模关联起来
			1--算法函数中的常数可以忽略
			2--算法函数中最高次幂的常数因子可以忽略
			3--算法函数中次幂越小，算法效率越高
			4--大O记法的时间规则和核心操作次数相关联
			5--但遇到次幂算法就要考虑算法的优
ps：每个代码都需要考虑最坏情况运行

	（2）算法的空间复杂度分析：
		ps：嵌入式必学，大空间可以忽略，优先计算时间复杂度
	